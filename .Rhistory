contour(x,y,5)
contour(x,y,matrix(1:4))
y=x
f=outer(x,y,function(x,y)cos(y)/(1+x^2))
contour(x,y,f)
contour(x,y,f,nlevels=45, add=T)
contour(x,y,f,nlevels=100, add=T)
fa=(f-t(f))/2
contour(x,y,fa,nlevels=15)
contour(x,y,fa,nlevels=15,add=T)
contour(x,y,fa,nlevels=25,add=T)
?contour
contour(x,y,x)
matrix(1:4)
matrix(1:4,nrow=2,ncol=2)
z=matrix(1:4,nrow=2,ncol=2)
contour(x,y,z)
x
z=matrix(1:5,ncol=5)
z
contour(x,y,z)
z=matrix(1:25,nrow=5,ncol=5)
contour(x,y,z)
?image
image(x,y,z)
?persp
persp(x,y,z)
persp(x,y,z,theta=40)
persp(x,y,z,theta=50)
persp(x,y,z,theta=50,phi=20)
persp(x,y,z,theta=50,phi=30)
persp(x,y,z,theta=50,phi=50)
A=matrix(1:16,4,4)
A[c(1,3),c(2,4)]
A
Auto=read,table("Auto.data")
Auto=read.table("Auto.data")
?fix
ls
ls()
?plot
?plot
max(1:5)
x=523
y=1:3
max(y)
max(x,y)
mean(1:10)
1+2+3+4+5+6+7+8+9+10
sum(1:10)
?chi
if?
?if
()
?if
cube <- function(x, n) {
x^3
}
cube(3)
cube(2)
cube(2,5)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f= 10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z= 10
f(3)
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
?runif
?gl
?tapply
?invisible
qnorm(.1, 21,5)
?dbinom
dbinom(2,10,.56)
pbindom(92,100,.9)
pbinom(92,100,.9)
dbinom(92,100,.9)
pbinom(34,3000000,.00001)
1-.7973094
1 - dbinom(34,3000000,.00001)
dbinom(35,3000000,.00001)
5.5*99
96.5*.5
544.5/(544.5+48.25)
pbinom(36,3000000,.00001)
1-pbinom(35,3000000,.00001)
39/((73*77)+39)
39/(39+27)
1-.59
.23*.27
150*.28
?pnorm
pnorm(35,sd=5.48)
scale(1)
scale(.1)
scale(.2)
pnorm(.91)
1-.8185887
.25*50
1-.28
12.5*.72
sqrt(9)
150*.28
8/3
1 - pnorm(2.666667)
160*.28
sqrt(44.8*(1-.28))
50-44.8
/5.679437
5.2/5.679437
1-pnorm(.9155837)
.23*.39
/(.0897+(.23*.27))
.0897/(.0897+(.23*.27))
.23*.39
1-.23
1-.27
.0897/(.0897+(.73*.77))
pnorm(.09)
pnorm(.18)
pnorm(1.18)
pnorm(2.18)
pnorm(3)
pnorm(.09)
?pnorm
.479-.433
/2
.046/2
.433+.023
.639+.817
1.456/2
.639-.817
-.178/2
.466+.544
1.01/2
.544-.466
.078/2
.111+.999
1.11/2
.555+.111
.999-.111
.888/2
.445+.393
.838/2
.445-.393
.052/2
.839+.737
1.576/2
.839-.737
.102/2
.529+.603
1.132/2
.603-.529
.074/2
rnorm(-.21)
pnorm(-.21)
pnorm(.32)
pnorm(0.204)
pnorm(0.714)
0.762-.581
1220-1050
170/245
pnorm(.694)
1-.756
245/sqrt(30)
1100-1050
50/44.7
pnorm(1.119)
rnorm(0.45)
?rnorm
dnorm(0.45)
pnorm(0.36)
qnorm(0.45)
pnorm(-0.126)
0.126*245
1050+30.87
mode(5,5,5,3)
?mode
mode(c(5,5,5,3)
)
?par
?plot_ss
?lm
pnorm(-1.78)
pnorm(1.13)
1-pnorm(1.13)
pnorm(1.11)
pnorm(-1.11)
1-pnorm(1.11)
.1335*2
.1334995*2
pnorm(-1.6)
2*pnorm(-1.6)
1-pnorm(1.98)
pnorm(-.86)
2*pnorm(-1.24)
pnorm(1.95)
1-pnorm(1.95)
2*(1-pnorm(1.95))
1-pnorm(1.22)
2*pnorm(-1.37)
1250+469+396
469/2115
1249+484+351
484/2084
pnorm(1.18)
1-.881
1-pnorm(2.96)
2*pnorm(2.32)
2*(1-pnorm(2.32))
49+42
pnorm(.73)
1-pnorm(.73)
pnorm(.22)
1-pnorm(.22)
2*(1-pnorm(-.15))
1-pnorm(-.15)
2*(pnorm(-.15))
1-pnorm(2.21)
1-pnorm(1.36)
1291+5670
1291+5670
pnorm(-3.0323)
pnorm(-1.17)
5000*.15
pnorm(-16.33)
2*(1-pnorm(.52))
3010*.76
2*(1-pnorm(1.27))
58*.362
2*pnorm(-2.1)
61648*.262
1028*.21
pnorm(-2.96)
8130*.2303
2*pnorm(-4.1)
pnorm(-1.795)
2*(1-pnorm(2.26))
12/35
2*pnorm(-2.46329)
2*(1-pnorm(.2))
1-pnorm(.84)
1028*.22
pnorm(-2.22)
61646*.266
1-pnorm(1.97)
2*(1-pnorm(.69))
8058*.2431
2*pnorm(-1.43)
61649*.27
3008*.27
2*(1-pnorm(2.53))
1-pnorm(1.27)
1-pnorm(.25)
1-pnorm(2.42)
488/1205
1205+488+352
488/2045
?norm
?pnorm
dnorm(.05)
qnorm(.05)
rnorm(.05)
qnorm(.05)
qnorm(.95)
qnorm(.99)
qnorm(.95)
pnorm(-2.27)
2*pnorm(-2.46)
2*pnorm(-1.93)
1-pnorm(1.45)
rnorm(.99)
qnorm(.99)
qnorm(.01)
qnorm(.025)
2*(1-pnorm(4.79))
2*(1-pnorm(3.14))
2*(1-pnorm(1.24))
2*pnorm(-1.66)
qnorm(.98)
qnorm(.01)
qnorm(.005)
2*(1-pnorm(1.09))
?ci
t.test(15,1.063)
?t.test
?x2
pnorm(.005)
qnorm(.005)
qnorm(.05)
?
mean
x=c(3.43,3.37,3.58,3.5,3.68,3.61,3.42,3.52,3.66,3.5,3.36,3.42)
mean(x)
?std
?stdev
summary(x)
sum(x)
dev(x)
head(x)
sd(x)
sqrt(12)
1.645*(0.109/sqrt(12))
3.504-0.0518
3.504+0.0518
barplot(x)
plot(x)
?plot
plot(x, type="l")
?sort
sort(x)
plot(sort(x), type="l")
boxplot(sort(x), type="l")
plot(x, type="l")
qnorm(.005)
qnorm(.025)
1.96*sqrt((0.02*0.98)/451)
t.test(x)
t.test(x,.99)
?t.test
t.test(x,conf.level.99)
t.test(x,conf.level=99)
t.test(x,conf.level=0.99)
2.201*(0.109/sqrt(12))
install.packages("Rcpp")
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp = oauth_app("Coursera Quiz"," a265e1f1f8494b53fe1e", "90d96e91c0e2cc416ec96dca49e3dde31255026e")
github_token = oauth2.0_token(oauth_endpoints("github"), myapp)
install.package(httpuv)
install.packages(httpuv)
install.packages("httpuv")
github_token = oauth2.0_token(oauth_endpoints("github"), myapp)
github_token = oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
library(httr)
library(httpuv)
oauth_endpoints("github")
myapp = oauth_app("Coursera Quiz","a265e1f1f8494b53fe1e", "90d96e91c0e2cc416ec96dca49e3dde31255026e")
github_token = oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
gtoken = config(token = github_token)
req = GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library("jsonlite")
install.packages("jsonlite")
library(jsonlite)
gtoken = config(token = github_token)
req = GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
?tojson
?toJSON
toJSON(req)
req
?content
toJSON(content(req))
?toJSON
toJSON(content(req), pretty = TRUE)
cat = toJSON(content(req), pretty = TRUE)
names(cat)
head(cat)
content(cat)
cat
mydf[mydf$svn_url=="https://github.com/jtleek/datasharing", c("svn_url", "created_at")]
req[reqf$svn_url=="https://github.com/jtleek/datasharing", c("svn_url", "created_at")]
req[req$svn_url=="https://github.com/jtleek/datasharing", c("svn_url", "created_at")]
cat[cat$svn_url=="https://github.com/jtleek/datasharing", c("svn_url", "created_at")]
cat[]
cat[1]
cat[2]
cat[cat$svn_url]
data.frame(req)
data.frame(cat)
cat[svn_url]
cat[]
mydf <- fromJSON(cat)
mydf
mydf[mydf$svn_url=="https://github.com/jtleek/datasharing", c("svn_url", "created_at")]
mydf[mydf$svn_url=="https://github.com/jtleek/datasharing"]
mydf[mydf$svn_url=="https://github.com/jtleek/datasharing", c("svn_url", "created_at")]
pnorm(.148)
pnorm(0)
(64.8-64.2)/2.7
pnorm(.22222)
63.8-64.2
/2.7
-.4/2.7
pnorm(.2222)-pnorm(-.1481481481)
pnorm(.8888)-pnorm(-.5925925926)
pnorm(-1.93)
qnorm(.99)
qnorm(.995)
qnorm(.95)
pnorm(-1.99)
pinv(.94)
qnorm(.94)
pnorm(-2)
pnorm(((110-100)/15)) - pnorm(((70-100)/15))
qnorm(.03)
pnorm(((64.1-63.4)/1.9)) - pnorm(((63.1-63.4)/1.9))
pnorm(((64.1-63.4)/.475)) - pnorm(((63.1-63.4)/.475))
pnorm(.333)
pnorm((115-100)/15) - pnorm((90-100)/15)
qnorm(.03)
pnorm((64-63.7)/2.2) - pnorm((63-63.7)/2.2)
pnorm((64-63.7)/.55) - pnorm((63-63.7)/.55)
pnorm(-0.9)
qnorm(.98)
ninety = 1.96
p1 = ((14/35)*(1-(14/35)))/35
p2 = ((15/26)*(1-(15/26)))/26
ninety * sqrt(p1 + p2)
65296*.5
32648*.28
32648*.26
diff = .28-.26
p1 = ((9141.44/32648)*(1-(9141.44/32648)))/32648
p2 = ((8488.48/32648)*(1-(8488.48/32648)))/32648
ninety * sqrt(p1 + p2)
er =ninety * sqrt(p1 + p2)
diff + er
diff - er
pnorm(.110)
library(datasets)
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
26.66364-15.1
abs(26.66364-15.1)
abs(15.1-26.66364)
set.seed(1)
rpois(5, 2)
?qpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
y
plot(x,y)
y
?rbinom
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x1 = 1
x2 = 2
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
?rprof
?Rprof
rnorm(.76)
??test
pnorm(.76)
1-pnorm(.755488802)
for i = seq(0,1000,5)
for seq(0,1000,5)
for x= seq(0,1000,5)
for i= seq(0,1000,5)
for i in seq(0,1000,5)
dir()
getwd()
setwd('work/coursera')
getwd()
dir()
setwd('data science')
setwd('data science')
dir()
setwd('reproducible research')
dir()
setwd('project 1')
dir()
